/* eslint-disable @typescript-eslint/no-var-requires */
import type { default as yargs } from '@bpinternal/yargs-extra'
import { parseEnv, YargsSchema } from '@bpinternal/yargs-extra'
import { api } from 'webchat-api'
import pathlib from 'path'

const yargsExtra = require('@bpinternal/yargs-extra') // running script from an esm module
const yargz = yargsExtra.default as ReturnType<typeof yargs>

const configSchema = {
  outDir: {
    type: 'string' as const,
  },
} satisfies YargsSchema

const description = 'Generate OpenAPI client'

void yargz
  .command('$0', description, configSchema, async (argv) => {
    const config = { ...argv, ...parseEnv(configSchema) }
    if (!config.outDir) {
      throw new Error('outDir is required')
    }

    const clientDir = pathlib.join(config.outDir, 'client')
    await api.exportClient(clientDir, {
      generator: 'opapi',
    })

    const signalsDir = pathlib.join(config.outDir, 'signals')
    await api.signals.exportSchemas(signalsDir)
  })
  .showHelpOnFail(false)
  .help()
  .parse()
